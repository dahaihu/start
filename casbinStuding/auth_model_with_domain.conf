[request_definition]
r = sub, dom, obj, act
# 会被转化成一个 ast 对象, key -> "r", Value -> "sub, obj, act", Tokens -> ["r_sub", "r_obj", "r_act"]

[policy_definition]
p = sub, dom, obj, act
# 会被转化成一个 ast 对象, key -> "p", Value -> "sub, obj, act", Tokens -> ["p_sub", "p_obj", "p_act"]

[role_definition]
g = _, _, _

[policy_effect]
e = some(where (p.eft == allow))
# 会被转化成一个 ast 对象, key -> "e", Value -> "some(where(p.eft == allow))", Tokens -> nil

[matchers]
m = g(r.sub, p.sub, r.dom) && r.dom == p.dom && keyMatch(r.obj, p.obj) && (r.act == p.act || p.act == "*")
# 会被转化成一个 ast 对象, key -> "m", Value -> "r.sub == p.sub && keyMatch(r.obj, p.obj) && (r.act == p.act || p.act == "*")", Tokens -> nil

